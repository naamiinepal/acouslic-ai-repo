_target_: src.models.BaseModule

optimizer:
  _target_: torch.optim.AdamW
  _partial_: true
  lr: 0.001
  weight_decay: 0.001

scheduler:
  _target_: torch.optim.lr_scheduler.ReduceLROnPlateau
  _partial_: true
  mode: min
  factor: 0.3
  patience: 10

net:
  _target_: src.models.components.acouslic_2d2d_model.CustomUnet  
  encoder_name: resnext50_32x4d     # choose encoder, e.g. mobilenet_v2 or efficientnet-b7
  encoder_weights: imagenet   # use `imagenet` pre-trained weights for encoder initialization
  in_channels: 140                # model input channels (1 for gray-scale images, 3 for RGB, etc.)
  classes: 140                    # model output channels (number of classes in your dataset)
  decoder_channels: [512, 256, 128, 64, 32]
  decoder_attention_type: scse

criterion:
  _target_: src.losses.seg_fs.SegmentationFrameSelectionLoss
  sigmoid: true
  lambda_ce: 0.25
  seg_lambda: 1
  cls_lambda: 1
  cls_weights:
    _target_: torch.tensor
    data: [0.2, 0.45, 0.35]